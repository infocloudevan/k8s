apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: ui
  name: ui
  namespace: demo-saas
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ui
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ui
    spec:
      containers:
      - args:
        - scoreboard
        - --pubsub-provider=beanstalk
        - --pubsub-endpoint=queue:11300
        - --postgres=$(DB_URL)
        - --postgres-read-only=$(DB_URL)
        - --redis=demo-saas-cache-redis-master:6379
        - --statsd-endpoint=stats:8125
        - --endpoint=0.0.0.0:80
        env:
        - name: JWT_SIGNING_KEY
          value: 8923khsdafs98y23kasef092134hurfe
        - name: SMTP_USERNAME
          value: AKIAJF2K33UAT7QC2QNQ
        - name: SMTP_PASSWORD
          value: AmHQd3vAB3ylF6xTNOuo7zhQOD6DFT19sa5OM7uFTvYh
        - name: DB_URL
          valueFrom: 
            secretKeyRef:
              name: saas-db-credentials
              key: fullurl
        image: 078306444420.dkr.ecr.us-east-2.amazonaws.com/darkcubed/hyperdark:v25.4.5
        imagePullPolicy: IfNotPresent
        name: scoreboard
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: ui
  namespace: demo-saas
spec:
  ports:
  - name: ui
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: ui
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  name: ui
  namespace: demo-saas
spec:
  rules:
  - host: rosenblatt.a.darkcubed.net
    http:
      paths:
      - backend:
          serviceName: accounts-manager
          servicePort: 3000
        path: /m/
      - backend:
          serviceName: ui
          servicePort: 80
        path: /
  tls:
  - hosts:
    - rosenblatt.a.darkcubed.net
    secretName: ui-app-ingress-tls

# Default values for prometheus-postgres-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: wrouesnel/postgres_exporter
  tag: v0.8.0
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 80
  targetPort: 9187
  name: http
  labels: {}
  annotations: {}

serviceMonitor:
  # When set true then use a ServiceMonitor to configure scraping
  enabled: false
  # Set the namespace the ServiceMonitor should be deployed
  # namespace: monitoring
  # Set how frequently Prometheus should scrape
  # interval: 30s
  # Set path to cloudwatch-exporter telemtery-path
  # telemetryPath: /metrics
  # Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator
  # labels:
  # Set timeout for scrape
  # timeout: 10s

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #    memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

rbac:
  # Specifies whether RBAC resources should be created
  create: true
  # Specifies whether a PodSecurityPolicy should be created
  pspEnabled: true
serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

securityContext: {}
  # The securityContext this Pod should use. See https://kubernetes.io/docs/concepts/policy/security-context/ for more.
  # runAsUser: 65534

config:
  datasource:
    # Specify one of both datasource or datasourceSecret
    host: saasdb.default.svc
    user: dark3
    # Only one of password and passwordSecret can be specified
    password: postgres
    # Specify passwordSecret if DB password is stored in secret.
    passwordSecret: {}
    # Secret name
    #  name:
    # Password key inside secret
    #  key:
    port: "5432"
    database: 'dark3'
    sslmode: disable
  datasourceSecret: {}
    # Specifies if datasource should be sourced from secret value in format: postgresql://login:password@hostname:port/dbname?sslmode=disable
    # Multiple Postgres databases can be configured by comma separated postgres connection strings
    # Secret name
    #  name:
    # Connection string key inside secret
    #  key:
  disableDefaultMetrics: false
  disableSettingsMetrics: false
  autoDiscoverDatabases: false
  excludeDatabases: []
  # this are the defaults queries that the exporter will run, extracted from: https://github.com/wrouesnel/postgres_exporter/blob/master/queries.yaml
  queries: |-
    ops_sensors:
      query: "SELECT s.sensor_uuid AS sensor, s.sensor_name, a.account_uuid AS account, a.account_name, s.sensor_type_code AS sensor_type, s.syslog_port_value AS syslog_port, CASE WHEN s.delete_ts IS NULL THEN 'false' ELSE 'true' END AS deleted, 1 AS metric FROM collections.sensors s INNER JOIN collections.accounts a ON a.account_uuid = s.account_uuid"
      metrics:
        - sensor:
            usage: "LABEL"
            description: "Sensor UUID"
        - sensor_name:
            usage: "LABEL"
            description: "Sensor Name"
        - account:
            usage: "LABEL"
            description: "Account UUID"
        - account_name:
            usage: "LABEL"
            description: "Account Name"
        - sensor_type:
            usage: "LABEL"
            description: "Sensor Type"
        - syslog_port:
            usage: "LABEL"
            description: "Sensor Port"
        - deleted:
            usage: "LABEL"
            description: "Sensor Deleted Flag"
        - metric:
            usage: "COUNTER"
            description: "Label metric"
nodeSelector: {}

tolerations: []

affinity: {}

annotations: {}

podLabels: {}

# Additional sidecar containers, e. g. for a database proxy, such as Google's cloudsql-proxy
extraContainers: |

# Additional volumes, e. g. for secrets used in an extraContainer
extraVolumes: |

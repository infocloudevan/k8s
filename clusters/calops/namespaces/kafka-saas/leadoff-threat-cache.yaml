apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "26"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"name":"leadoff-threat-cache","namespace":"kafka-saas"},"spec":{"replicas":10,"template":{"metadata":{"annotations":null,"labels":{"app":"leadoff-threat-cache","prom":"monitor"}},"spec":{"containers":[{"args":["/leadoff","--log.verbosity=10","threat-cache"],"env":[{"name":"LEADOFF_THREAT_CACHE_KAFKA_ENDPOINTS","valueFrom":{"configMapKeyRef":{"key":"kafka-cluster","name":"endpoints"}}},{"name":"LEADOFF_THREAT_CACHE_CACHE_ENDPOINT","valueFrom":{"configMapKeyRef":{"key":"redis-server","name":"endpoints"}}},{"name":"LEADOFF_THREAT_CACHE_CACHE_CLUSTER_ENDPOINTS","valueFrom":{"configMapKeyRef":{"key":"redis-cluster","name":"endpoints"}}}],"image":"078306444420.dkr.ecr.us-east-2.amazonaws.com/darkcubed/leadoff:test","imagePullPolicy":"Always","name":"leadoff","ports":[{"containerPort":9102,"name":"metrics","protocol":"TCP"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError"}]}}}}
  creationTimestamp: 2019-08-27T14:30:58Z
  generation: 525
  labels:
    app: leadoff-threat-cache
    prom: monitor
  name: leadoff-threat-cache
  namespace: kafka-saas
  resourceVersion: "232894247"
  selfLink: /apis/extensions/v1beta1/namespaces/kafka-saas/deployments/leadoff-threat-cache
  uid: 49546840-c8d7-11e9-b7e4-02c6bb02f104
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 30
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: leadoff-threat-cache
      prom: monitor
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        date: "1574791214"
      creationTimestamp: null
      labels:
        app: leadoff-threat-cache
        prom: monitor
    spec:
      containers:
      - args:
        - /hyperdark
        - --log.verbosity=10
        - leadoff
        - threat
        - cache
        - --kafka.input-topic=ThreatCacheStream
        env:
        - name: HYPERDARK_KAFKA_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              key: kafka-cluster
              name: endpoints
        - name: HYPERDARK_CACHE_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: redis-server
              name: endpoints
        - name: HYPERDARK_CACHE_CLUSTER_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              key: redis-cluster
              name: endpoints
        image: 078306444420.dkr.ecr.us-east-2.amazonaws.com/darkcubed/hyperdark:f2d65ca
        imagePullPolicy: Always
        name: leadoff
        ports:
        - containerPort: 9102
          name: metrics
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 30
  conditions:
  - lastTransitionTime: 2020-07-24T02:22:21Z
    lastUpdateTime: 2020-07-24T02:22:21Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 525
  readyReplicas: 30
  replicas: 30
  updatedReplicas: 30

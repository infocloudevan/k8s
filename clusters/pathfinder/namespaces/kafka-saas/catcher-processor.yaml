apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "40"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"catcher-processor"},"name":"catcher-processor","namespace":"kafka-saas"},"spec":{"progressDeadlineSeconds":2147483647,"replicas":10,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"catcher-processor"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"date":"1595018266"},"creationTimestamp":null,"labels":{"app":"catcher-processor"}},"spec":{"containers":[{"args":["/hyperdark","--log.verbosity=10","catcher","process"],"env":[{"name":"HYPERDARK_KAFKA_ENDPOINTS","valueFrom":{"configMapKeyRef":{"key":"kafka-cluster","name":"endpoints"}}},{"name":"HYPERDARK_CACHE_ENDPOINT","valueFrom":{"configMapKeyRef":{"key":"redis-server","name":"endpoints"}}},{"name":"HYPERDARK_CACHE_CLUSTER_ENDPOINTS","valueFrom":{"configMapKeyRef":{"key":"redis-cluster","name":"endpoints"}}}],"image":"944254975049.dkr.ecr.us-gov-west-1.amazonaws.com/darkcubed-gov/hyperdark:f2d65ca","imagePullPolicy":"Always","name":"catcher","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}}}
  creationTimestamp: "2019-08-20T06:29:18Z"
  generation: 69
  labels:
    app: catcher-processor
  name: catcher-processor
  namespace: kafka-saas
  resourceVersion: "131840837"
  selfLink: /apis/extensions/v1beta1/namespaces/kafka-saas/deployments/catcher-processor
  uid: d6d44922-c313-11e9-845f-0a9658482414
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 10
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: catcher-processor
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        date: "1595018266"
      creationTimestamp: null
      labels:
        app: catcher-processor
    spec:
      containers:
      - args:
        - /hyperdark
        - --log.verbosity=10
        - catcher
        - process
        env:
        - name: HYPERDARK_KAFKA_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              key: kafka-cluster
              name: endpoints
        - name: HYPERDARK_CACHE_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: redis-server
              name: endpoints
        - name: HYPERDARK_CACHE_CLUSTER_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              key: redis-cluster
              name: endpoints
        image: 944254975049.dkr.ecr.us-gov-west-1.amazonaws.com/darkcubed-gov/hyperdark:f2d65ca
        imagePullPolicy: Always
        name: catcher
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 10
  conditions:
  - lastTransitionTime: "2020-09-12T13:33:37Z"
    lastUpdateTime: "2020-09-12T13:33:37Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 69
  readyReplicas: 10
  replicas: 10
  updatedReplicas: 10

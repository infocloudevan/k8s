apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "57"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"44"},"creationTimestamp":"2019-08-27T14:30:58Z","generation":90,"labels":{"app":"leadoff-threat","prom":"monitor"},"name":"leadoff-threat","namespace":"kafka-saas","selfLink":"/apis/apps/v1/namespaces/kafka-saas/deployments/leadoff-threat","uid":"492a9baa-c8d7-11e9-b7e4-02c6bb02f104"},"spec":{"progressDeadlineSeconds":2147483647,"replicas":30,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"leadoff-threat","prom":"monitor"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"date":"1574791214"},"creationTimestamp":null,"labels":{"app":"leadoff-threat","prom":"monitor"}},"spec":{"containers":[{"args":["/hyperdark","--log.verbosity=7","leadoff","threat","manage","--kafka.block-output-topic=BlockStream01","--kafka.mute-output-topic=MuteStream01"],"env":[{"name":"HYPERDARK_KAFKA_ENDPOINTS","valueFrom":{"configMapKeyRef":{"key":"kafka-cluster","name":"endpoints"}}},{"name":"HYPERDARK_CACHE_ENDPOINT","valueFrom":{"configMapKeyRef":{"key":"redis-server","name":"endpoints"}}},{"name":"HYPERDARK_CACHE_CLUSTER_ENDPOINTS","valueFrom":{"configMapKeyRef":{"key":"redis-cluster","name":"endpoints"}}},{"name":"KAFKA_CLIENT_ID","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}}],"image":"078306444420.dkr.ecr.us-east-2.amazonaws.com/darkcubed/hyperdark:e4e96f0","imagePullPolicy":"Always","name":"leadoff","ports":[{"containerPort":9102,"name":"metrics","protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}}}
  creationTimestamp: 2019-08-27T14:30:58Z
  generation: 118
  labels:
    app: leadoff-threat
    prom: monitor
  name: leadoff-threat
  namespace: kafka-saas
  resourceVersion: "233476026"
  selfLink: /apis/extensions/v1beta1/namespaces/kafka-saas/deployments/leadoff-threat
  uid: 492a9baa-c8d7-11e9-b7e4-02c6bb02f104
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 15
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: leadoff-threat
      prom: monitor
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        date: "1574791214"
      creationTimestamp: null
      labels:
        app: leadoff-threat
        prom: monitor
    spec:
      containers:
      - args:
        - /hyperdark
        - --log.verbosity=7
        - leadoff
        - threat
        - manage
        - --kafka.block-output-topic=BlockStream01
        - --kafka.mute-output-topic=MuteStream01
        env:
        - name: HYPERDARK_KAFKA_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              key: kafka-cluster
              name: endpoints
        - name: HYPERDARK_CACHE_ENDPOINT
          valueFrom:
            configMapKeyRef:
              key: redis-server
              name: endpoints
        - name: HYPERDARK_CACHE_CLUSTER_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              key: redis-cluster
              name: endpoints
        - name: HYPERDARK_DB_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: postgres-cluster
              name: endpoints
        - name: KAFKA_CLIENT_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: 078306444420.dkr.ecr.us-east-2.amazonaws.com/darkcubed/hyperdark:f2d65ca
        imagePullPolicy: Always
        name: leadoff
        ports:
        - containerPort: 9102
          name: metrics
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 15
  conditions:
  - lastTransitionTime: 2020-09-16T01:33:06Z
    lastUpdateTime: 2020-09-16T01:33:06Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 118
  readyReplicas: 15
  replicas: 15
  updatedReplicas: 15

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "10"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"name":"catcher-test","namespace":"kafka-saas"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"catcher-test"}},"template":{"metadata":{"labels":{"app":"catcher-test"}},"spec":{"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"topologyKey":"kubernetes.io/hostname"}]}},"containers":[{"args":["/hyperdark","--log.verbosity=10","catcher","listen","--kafka.output-topic=NetFlowTestStream"],"env":[{"name":"HYPERDARK_KAFKA_ENDPOINTS","valueFrom":{"configMapKeyRef":{"key":"kafka-cluster","name":"endpoints"}}}],"image":"078306444420.dkr.ecr.us-east-2.amazonaws.com/darkcubed/hyperdark:netflow-v5","imagePullPolicy":"Always","name":"listener","terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/var/certs","name":"certs"}]},{"args":["/hyperdark","--log.verbosity=10","catcher","process","--kafka.group-name=NetFlowTest","--kafka.input-topic=NetFlowTestStream","--kafka.event-output-topic=FooBar","--kafka.failed-output-topic=FooBar"],"env":[{"name":"HYPERDARK_KAFKA_ENDPOINTS","valueFrom":{"configMapKeyRef":{"key":"kafka-cluster","name":"endpoints"}}}],"image":"078306444420.dkr.ecr.us-east-2.amazonaws.com/darkcubed/hyperdark:netflow-v5","imagePullPolicy":"Always","name":"processor","terminationMessagePolicy":"FallbackToLogsOnError"}],"hostNetwork":true,"nodeSelector":{"kops.k8s.io/instancegroup":"test-syslog"},"tolerations":[{"effect":"NoSchedule","key":"dedicated","value":"udp-syslog"}],"volumes":[{"name":"certs","secret":{"secretName":"calamari-syslog-tls"}}]}}}}
  creationTimestamp: 2020-01-16T18:57:33Z
  generation: 24
  labels:
    app: catcher-test
  name: catcher-test
  namespace: kafka-saas
  resourceVersion: "201011235"
  selfLink: /apis/extensions/v1beta1/namespaces/kafka-saas/deployments/catcher-test
  uid: 0e0151c4-3892-11ea-bc71-0a9e36e5582e
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: catcher-test
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        date: "1580162395"
      creationTimestamp: null
      labels:
        app: catcher-test
        prom: monitor
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - /hyperdark
        - --log.verbosity=10
        - catcher
        - listen
        - --kafka.output-topic=NetFlowTestStream
        env:
        - name: HYPERDARK_KAFKA_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              key: kafka-cluster
              name: endpoints
        image: 078306444420.dkr.ecr.us-east-2.amazonaws.com/darkcubed/hyperdark:DC-426
        imagePullPolicy: Always
        name: listener
        ports:
        - containerPort: 9102
          hostPort: 9102
          name: metrics
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/certs
          name: certs
      - args:
        - /hyperdark
        - --log.verbosity=10
        - catcher
        - process
        - --kafka.group-name=NetFlowTest
        - --kafka.input-topic=NetFlowTestStream
        env:
        - name: HYPERDARK_KAFKA_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              key: kafka-cluster
              name: endpoints
        image: 078306444420.dkr.ecr.us-east-2.amazonaws.com/darkcubed/hyperdark:DC-426
        imagePullPolicy: Always
        name: processor
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      hostNetwork: true
      nodeSelector:
        kops.k8s.io/instancegroup: test-syslog
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: dedicated
        value: udp-syslog
      volumes:
      - name: certs
        secret:
          defaultMode: 420
          secretName: calamari-syslog-tls
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2020-01-16T18:57:33Z
    lastUpdateTime: 2020-01-16T18:57:33Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 24
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
